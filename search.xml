<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Regex Crossword Hexagonal Solutions]]></title>
      <url>/2017/06/25/Regex-Crossword-Hexagonal-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Buzz-Buzz"><a href="#Buzz-Buzz" class="headerlink" title="Buzz Buzz"></a>Buzz Buzz</h2><p>Hive<br><img src="/images/regex/hex1.JPG" alt=""></p>
<h2 id="Garden"><a href="#Garden" class="headerlink" title="Garden"></a>Garden</h2><p>Flower<br><img src="/images/regex/hex2.JPG" alt=""></p>
<h2 id="Pollen"><a href="#Pollen" class="headerlink" title="Pollen"></a>Pollen</h2><p>Birds and Bees<br><img src="/images/regex/hex3.JPG" alt=""></p>
<h2 id="Stationary"><a href="#Stationary" class="headerlink" title="Stationary"></a>Stationary</h2><p>Bee = Move Very Fast To Stay Still<br><img src="/images/regex/hex4.JPG" alt=""></p>
<h2 id="Winnie"><a href="#Winnie" class="headerlink" title="Winnie"></a>Winnie</h2><p>I’ve been thinking these are the wrong sort of bees<br><img src="/images/regex/hex5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Player Puzzle Solutions]]></title>
      <url>/2017/06/25/Regex-Crossword-Player-Puzzle-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Binary-by-Player-6450"><a href="#Binary-by-Player-6450" class="headerlink" title="Binary (by Player #6450)"></a>Binary (by Player #6450)</h2><p><img src="/images/regex/player1.JPG" alt=""></p>
<h2 id="Single-Cell-Organism-by-Player-20428"><a href="#Single-Cell-Organism-by-Player-20428" class="headerlink" title="Single Cell Organism (by Player #20428)"></a>Single Cell Organism (by Player #20428)</h2><p><img src="/images/regex/player2.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[How well do you know Node.js?]]></title>
      <url>/2017/06/25/How-well-do-you-know-Node-js/</url>
      <content type="html"><![CDATA[<p><a href="https://edgecoders.com/how-well-do-you-know-node-js-36b1473c01c8" target="_blank" rel="external">https://edgecoders.com/how-well-do-you-know-node-js-36b1473c01c8</a></p>
<ol>
<li>How come when you declare a global variable in any Node.js file it’s not really global to all modules?<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">exports, require, module, __filename, __dirname</span>) </span>&#123;</div><div class="line">  <span class="comment">// module code</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
</ol>
<p><a href="https://nodejs.org/api/modules.html#modules_the_module_wrapper" target="_blank" rel="external">https://nodejs.org/api/modules.html#modules_the_module_wrapper</a></p>
<ol>
<li><p><strong>When exporting the API of a Node module, why can we sometimes use exports and other times we have to use module.exports?</strong><br>exports is initially just an alias for module.exports. So if you write <code>exports.foo = &#39;bar&#39;</code>, it is actually <code>module.exports = { foo: &#39;bar&#39;}</code>. However if you want to export a function or an object, you override the exports alias. So using <code>module.exports = function foo() {}</code> will cause exports and module.exports to no longer reference the same object.</p>
</li>
<li><p><strong>Can we require local files without using relative paths?</strong><br>Lots of different ways. This is probably the simplest.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// app.js</span></div><div class="line">global.__base = __dirname + <span class="string">'/'</span>;</div><div class="line"></div><div class="line"><span class="comment">// bar/whatever.js</span></div><div class="line"><span class="keyword">const</span> foo = <span class="built_in">require</span>(__base + <span class="string">'foo/whatever'</span>);</div></pre></td></tr></table></figure>
<p><a href="https://gist.github.com/branneman/8048520" target="_blank" rel="external">Gist with different options</a></p>
</li>
<li><p>What is the Event Loop? Is it part of V8?</p>
</li>
<li><p>What is the Call Stack? Is it part of V8?</p>
</li>
<li><p><strong>What is the difference between setImmediate and process.nextTick?</strong></p>
</li>
</ol>
<ul>
<li><code>setImmediate</code> puts the callback at the end of the event queue.</li>
<li><code>process.nextTick</code> puts the callback at the beginning of the event queue.<br><a href="https://nodejs.org/api/timers.html#timers_scheduling_timers" target="_blank" rel="external">Node Docs on Times</a></li>
</ul>
<ol>
<li><p><strong>How do you make an asynchronous function return a value?</strong><br>Return the value as part of resolving a promise.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; resolve(<span class="string">'bar'</span>) &#125;, <span class="number">2000</span>);</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> response = <span class="keyword">await</span> foo();</div><div class="line">  <span class="built_in">console</span>.log(response);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://ponyfoo.com/articles/understanding-javascript-async-await" target="_blank" rel="external">Ponyfoo article on async/await with promises</a></p>
</li>
<li><p><strong>Can callbacks be used with promises or is it one way or the other?</strong><br>You can use both. I like the below pattern.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params">callback</span>) </span>&#123;</div><div class="line">  <span class="keyword">if</span> (callback) &#123;</div><div class="line">    callback();</div><div class="line">    <span class="keyword">return</span> <span class="literal">undefined</span>;</div><div class="line">  &#125;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">    <span class="comment">// whatever</span></div><div class="line">  &#125;)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>What are the major differences between spawn, exec, and fork?</p>
</li>
</ol>
<ul>
<li><code>spawn</code> will ‘spawn’ a shell, execute a command within that shell and stream back the process output to the parent.</li>
<li><code>exec</code> works the same as <code>spawn</code> except that its buffers the process output.</li>
<li><code>fork</code></li>
</ul>
<ol>
<li><p>How does the cluster module work? How is it different than using a load balancer?</p>
</li>
<li><p><strong>What are the –harmony-* flags?</strong><br>Enables a staged V8 feature. This is a feature the V8 team has implemented but isn’t on by default due to it being almost but not yet complete. Use <code>node --v8-options | grep &quot;in progress&quot;</code> to list them.</p>
</li>
<li><p><strong>How can you read and inspect the memory usage of a Node.js process?</strong><br>Yes, either with any process manager outside Node, or using <code>process.memoryUsage()</code> inside Node.<br><a href="https://nodejs.org/api/process.html#process_process_memoryusage" target="_blank" rel="external">Node Docs on process.memoryUsage()</a></p>
</li>
<li><p><strong>Can reverse-search in commands history be used inside Node’s REPL?</strong><br>Not on Windows (as far as I know). On Linux, you install <a href="https://github.com/hanslub42/rlwrap" target="_blank" rel="external">rlwrap</a>, then run Node REPL as <code>NODE_NO_READLINE=1 rlwrap node</code>. Honestly not worth the effort.</p>
</li>
<li><p>What are V8 object and function templates?</p>
</li>
<li><p><strong>What is libuv and how does Node.js use it?</strong><br>To abstract the non-blocking I/O operations, so Node can be cross platform. It handles file system operations, TCP/UDP sockets, child processes etc. It is what provides Node with the Event loop.</p>
</li>
<li><p><strong>How can you make Node’s REPL always use JavaScript strict mode?</strong><br>Globally it is as simple as <code>alias node=node --use_strict</code>. Or define your own repl.js such that;</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> repl = <span class="built_in">require</span>(<span class="string">'repl'</span>);</div><div class="line"><span class="keyword">const</span> r = repl.start(&#123;</div><div class="line">  <span class="attr">replMode</span>: repl.REPL_MODE_STRICT</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
</li>
<li><p><strong>How can we do one final operation before a Node process exits? Can that operation be done asynchronously?</strong><br>You can register a function for the exit event, but its synchronous. If you need your function to be asynchronous, use the beforeExit event like so;</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</div><div class="line">    setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> &#123; resolve(<span class="string">'bar'</span>) &#125;, <span class="number">2000</span>);</div><div class="line">  &#125;);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">bar</span>(<span class="params"></span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> response = <span class="keyword">await</span> foo();</div><div class="line">  <span class="built_in">console</span>.log(response);</div><div class="line">&#125;</div><div class="line"></div><div class="line">process.once(<span class="string">"beforeExit"</span>, bar);</div></pre></td></tr></table></figure>
<p><a href="https://nodejs.org/api/process.html#process_event_beforeexit" target="_blank" rel="external">Node Docs on beforeExit event</a></p>
</li>
<li><p><strong>Besides V8 and libuv, what other external dependencies does Node have?</strong></p>
</li>
</ol>
<ul>
<li>http-parser - used parsing HTTP requests and responses.</li>
<li>c-ares - used for asynchronous DNS queries</li>
<li>OpenSSL - used for crypto functions</li>
<li>zlib - used for asynchronous compression and decompression<br><a href="https://nodejs.org/en/docs/meta/topics/dependencies/0" target="_blank" rel="external">More information</a></li>
</ul>
<ol>
<li><p><strong>What’s the problem with the process uncaughtException event? How is it different than the exit event?</strong><br>On uncaughtException, Node will default to printing the stack trace and exiting. If we register an event handler on the uncaughtException event, Node will not exit. So you can produce some unexpected behaviour and is usually a sign that someone is using the wrong approach or isn’t handling their errors.<br><a href="https://nodejs.org/api/process.html#process_event_uncaughtexception" target="_blank" rel="external">More information</a></p>
</li>
<li><p>Do Node buffers use V8 memory? Can they be resized?</p>
</li>
<li><p><strong>What’s the difference between Buffer.alloc and Buffer.allocUnsafe?</strong><br><code>Buffer.alloc</code> allocates a memory chunk and goes through an initialization process of setting all the cells to zero, then returning this wrapped in a Node Buffer object. <code>Buffer.allocUnsafe</code> does the same steps except for the initialization process. The unsafe part is that this could leak sensitive user information. The reason for both is that there may be applications where the initialization process produces too much overhead.</p>
</li>
<li><p><strong>How is the slice method on buffers different from that on arrays?</strong></p>
</li>
</ol>
<ul>
<li>Calling slice on an array returns an array but does not mutate the existing array.</li>
<li>Calling splice on an array returns an array and mutates the existing array.</li>
<li>Calling slice on a buffer returns a reference to the same chunk of memory, but offset and cropped. Mutating the data in that reference will mutate the data in the original buffer.<br><a href="https://nodejs.org/api/buffer.html#buffer_buf_slice_start_end" target="_blank" rel="external">Node Docs on Buffer slice</a></li>
</ul>
<ol>
<li><p>What is the string_decoder module useful for? How is it different than casting buffers to strings?<br>It is useful for decoding Buffer objects into strings. You can just call <code>buffer.toString()</code>, but string_decoder handles multibyte UTF-8 and UTF-16 characters.<br><a href="https://nodejs.org/api/string_decoder.html#string_decoder_string_decoder" target="_blank" rel="external">Node Docs on string_decoder</a></p>
</li>
<li><p>What are the 5 major steps that the require function does?</p>
<ul>
<li>Resolving - Find the module in the file system</li>
<li>Loading -</li>
<li>Wrapping</li>
<li>Evaluating</li>
<li>Caching</li>
</ul>
</li>
<li><p>What is the require.resolve function and what is it useful for?<br>It invokes only the resolve step in the require process (the first step). It is useful to verify that a module exists, possibly for some optional package. You can see where Node will look with <code>console.log(module.paths)</code>.</p>
</li>
<li><p><strong>What is the main property in package.json useful for?</strong><br>Indicating the entry point to the program.<br><a href="https://docs.npmjs.com/files/package.json#main" target="_blank" rel="external">npm Docs on package.json</a></p>
</li>
<li><p>What are circular modular dependencies in Node and how can they be avoided?</p>
</li>
<li><p><strong>What are the 3 file extensions that will be automatically tried by the require function?</strong><br><code>.js</code>, <code>.json</code> and <code>.node</code> in that order.<br><a href="https://nodejs.org/api/modules.html#modules_file_modules" target="_blank" rel="external">Node Docs on File Modules</a></p>
</li>
<li><p><strong>When creating an http server and writing a response for a request, why is the end() function required?</strong><br>Because the response object is a stream. Therefore we need to indicate that we have finished writing data.</p>
</li>
<li><p><strong>When is it ok to use the file system *Sync methods?</strong><br>In applications where blocking is appropriate. For example, a CLI tool that performs synchronous operations would be appropriate. A web server that is handling multiple concurrent clients would not.</p>
</li>
<li><p><strong>How can you print only one level of a deeply nested object?</strong></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">util.inspect(foo, &#123; <span class="attr">depth</span>: <span class="number">0</span> &#125;)</div></pre></td></tr></table></figure>
<p><a href="https://nodejs.org/api/util.html#util_util_inspect_object_options" target="_blank" rel="external">Node Docs on util.inspect</a></p>
</li>
<li><p><strong>What is the node-gyp package used for?</strong><br>gyp is a ‘meta-build system’. It generates other build systems. This enables cross platform support. Node uses gyp as node-gyp to compile addon modules as native.</p>
</li>
<li><p><strong>The objects exports, require, and module are all globally available in every module but they are different in every module. How?</strong><br>Node wraps each module in the function below. So, exports, require and module appear to the module as global variables but actually they are module-specific.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">exports, require, module, __filename, __dirname</span>) </span>&#123;</div><div class="line"><span class="comment">// Module code actually lives in here</span></div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p><a href="https://nodejs.org/api/modules.html#modules_the_module_wrapper" target="_blank" rel="external">Node Docs on the module wrapper</a></p>
</li>
<li><p>How can a module be both requirable by other modules and executable directly using the node command?<br>Using the following conditional.</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="built_in">require</span>.main === <span class="built_in">module</span>) &#123;</div><div class="line">  <span class="comment">// Executed directly</span></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">  <span class="comment">// Required</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://nodejs.org/api/modules.html#modules_accessing_the_main_module" target="_blank" rel="external">Node Docs on accesing the main module</a></p>
</li>
<li><p>What’s an example of a built-in stream in Node that is both readable and writable?</p>
</li>
<li><p>What’s the difference between using event emitters and using simple callback functions to allow for asynchronous handling of code?</p>
</li>
<li><p>The require function always caches the module it requires. What can you do if you need to execute the code in a required module many times?</p>
</li>
<li><p>What’s the difference between the Paused and the Flowing modes of readable streams?</p>
</li>
<li><p>What does the –inspect argument do for the node command?</p>
</li>
<li><p>When working with streams, when do you use the pipe function and when do you use events? Can those two methods be combined?</p>
</li>
</ol>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Hamlet Solutions]]></title>
      <url>/2017/06/21/Regex-Crossword-Hamlet-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="The-Ghost"><a href="#The-Ghost" class="headerlink" title="The Ghost"></a>The Ghost</h2><p>Revenge his most foul and unnatural murder<br><img src="/images/regex/hamlet1.JPG" alt=""></p>
<h2 id="Hamlet-and-Ophelia"><a href="#Hamlet-and-Ophelia" class="headerlink" title="Hamlet and Ophelia"></a>Hamlet and Ophelia</h2><p>To be, or not to be, that is the question<br><img src="/images/regex/hamlet2.JPG" alt=""></p>
<h2 id="The-Play"><a href="#The-Play" class="headerlink" title="The Play"></a>The Play</h2><p>He poisons him i’ the garden<br><img src="/images/regex/hamlet3.JPG" alt=""></p>
<h2 id="Laertes"><a href="#Laertes" class="headerlink" title="Laertes"></a>Laertes</h2><p>Too much of water has thou, poor Ophelia!<br><img src="/images/regex/hamlet4.JPG" alt=""></p>
<h2 id="Memento"><a href="#Memento" class="headerlink" title="Memento"></a>Memento</h2><p>Alas, poor Yorick! … A fellow of infinite jest<br><img src="/images/regex/hamlet5.JPG" alt=""></p>
<h2 id="The-End"><a href="#The-End" class="headerlink" title="The End"></a>The End</h2><p>Now cracks a noble heart. Good night, sweet prince<br><img src="/images/regex/hamlet6.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Volapük Solutions]]></title>
      <url>/2017/06/21/Regex-Crossword-Volapuk-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Bal"><a href="#Bal" class="headerlink" title="Bal"></a>Bal</h2><p><img src="/images/regex/vola1.JPG" alt=""></p>
<h2 id="Tel"><a href="#Tel" class="headerlink" title="Tel"></a>Tel</h2><p>Omg that is cheeky.<br><img src="/images/regex/vola2.JPG" alt=""></p>
<h2 id="Kil"><a href="#Kil" class="headerlink" title="Kil"></a>Kil</h2><p><img src="/images/regex/vola3.JPG" alt=""></p>
<h2 id="Fol"><a href="#Fol" class="headerlink" title="Fol"></a>Fol</h2><p><img src="/images/regex/vola4.JPG" alt=""></p>
<h2 id="Lul"><a href="#Lul" class="headerlink" title="Lul"></a>Lul</h2><p><img src="/images/regex/vola5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Cities Solutions]]></title>
      <url>/2017/06/21/Regex-Crossword-Cities-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Pisco-Sour"><a href="#Pisco-Sour" class="headerlink" title="Pisco Sour"></a>Pisco Sour</h2><p>Lima<br><img src="/images/regex/cities1.JPG" alt=""></p>
<h2 id="Roman-Latin"><a href="#Roman-Latin" class="headerlink" title="Roman Latin"></a>Roman Latin</h2><p>Londinium<br><img src="/images/regex/cities2.JPG" alt=""></p>
<h2 id="Big-and-hot"><a href="#Big-and-hot" class="headerlink" title="Big and hot"></a>Big and hot</h2><p>New York<br><img src="/images/regex/cities3.JPG" alt=""></p>
<h2 id="Alpha-World-City"><a href="#Alpha-World-City" class="headerlink" title="Alpha World City"></a>Alpha World City</h2><p>Kuala Lumpur<br><img src="/images/regex/cities4.JPG" alt=""></p>
<h2 id="Home"><a href="#Home" class="headerlink" title="Home"></a>Home</h2><p>Copenhagen<br><img src="/images/regex/cities5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Double Solutions]]></title>
      <url>/2017/06/21/Regex-Crossword-Double-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Telekinesis"><a href="#Telekinesis" class="headerlink" title="Telekinesis"></a>Telekinesis</h2><p>ET<br><img src="/images/regex/double1.JPG" alt=""></p>
<h2 id="GMC-Vandura"><a href="#GMC-Vandura" class="headerlink" title="GMC Vandura"></a>GMC Vandura</h2><p>A-Team<br><img src="/images/regex/double2.JPG" alt=""></p>
<h2 id="Bat-Man"><a href="#Bat-Man" class="headerlink" title="Bat Man"></a>Bat Man</h2><p>Nosferatu<br><img src="/images/regex/double3.JPG" alt=""></p>
<h2 id="Big-Mac"><a href="#Big-Mac" class="headerlink" title="Big Mac"></a>Big Mac</h2><p>Pulp Fiction<br><img src="/images/regex/double4.JPG" alt=""></p>
<h2 id="The-Lektor-Device"><a href="#The-Lektor-Device" class="headerlink" title="The Lektor Device"></a>The Lektor Device</h2><p>From Russia With Love<br><img src="/images/regex/double5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Palindromeda Solutions]]></title>
      <url>/2017/06/20/Regex-Crossword-Palindromeda-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Ten-o’clock"><a href="#Ten-o’clock" class="headerlink" title="Ten o’clock"></a>Ten o’clock</h2><p><img src="/images/regex/palin1.JPG" alt=""></p>
<h2 id="Third"><a href="#Third" class="headerlink" title="Third"></a>Third</h2><p><img src="/images/regex/palin2.JPG" alt=""></p>
<h2 id="Horn"><a href="#Horn" class="headerlink" title="Horn"></a>Horn</h2><p><img src="/images/regex/palin3.JPG" alt=""></p>
<h2 id="Open-the-lid"><a href="#Open-the-lid" class="headerlink" title="Open the lid"></a>Open the lid</h2><p><img src="/images/regex/palin4.JPG" alt=""></p>
<h2 id="Time-Walker"><a href="#Time-Walker" class="headerlink" title="Time Walker"></a>Time Walker</h2><p><img src="/images/regex/palin5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Experienced Solutions]]></title>
      <url>/2017/06/20/Regex-Crossword-Experienced-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Royal-Dinner"><a href="#Royal-Dinner" class="headerlink" title="Royal Dinner"></a>Royal Dinner</h2><p>Food fit for a king<br><img src="/images/regex/exp1.JPG" alt=""></p>
<h2 id="Regular-Workout"><a href="#Regular-Workout" class="headerlink" title="Regular Workout"></a>Regular Workout</h2><p>Regular expression of the day<br><img src="/images/regex/exp2.JPG" alt=""></p>
<h2 id="We-apologise-for-the-inconvenience"><a href="#We-apologise-for-the-inconvenience" class="headerlink" title="We apologise for the inconvenience"></a>We apologise for the inconvenience</h2><p>Answer the great question now<br><img src="/images/regex/exp3.JPG" alt=""></p>
<h2 id="Questionable"><a href="#Questionable" class="headerlink" title="Questionable"></a>Questionable</h2><p>Cross pattern<br><img src="/images/regex/exp4.JPG" alt=""></p>
<h2 id="Hamlet"><a href="#Hamlet" class="headerlink" title="Hamlet"></a>Hamlet</h2><p>To be or not to be a regular regx<br><img src="/images/regex/exp5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[The 4-Hour Work Week]]></title>
      <url>/2017/06/19/The-4-Hour-Work-Week/</url>
      <content type="html"><![CDATA[<p>For more than a year, I have been meaning to read Tim Ferriss’s famous book which was semi-written for millennials. If you tend to read certain subreddits (<a href="http://www.reddit.com/r/financialindependance" target="_blank" rel="external">/r/financialindependance</a>, <a href="http://www.reddit.com/r/stoicism" target="_blank" rel="external">/r/stoicism</a>, etc) as I do then you will see his name come up on book recommendation threads. I also have friends who are into self improvement content, and they have been hounding me to read it so we can discuss it.</p>
<a id="more"></a>
<div class="bookcover"><br>  <img src="/images/bookcovers/The-4-Hour-Work-Week.jpg" height="185"><br></div>

<h2 id="Reactionary-attitude-towards-time-wasters"><a href="#Reactionary-attitude-towards-time-wasters" class="headerlink" title="Reactionary attitude towards time wasters"></a>Reactionary attitude towards time wasters</h2><p>His attitude towards time is clearly a result of having experienced being yet another small cog in yet another large corporate machine. He wants to work from home because he works faster without office disruptions. And who cares if you complete eight hours of work in one, because most of that eight is corporate paper pushing as an exercise in inefficiency. Therefore if you can work from home, you can get all your paper pushed as efficiently as possible.</p>
<p>When I’ve heard managers argue against working from home, it has been for this exact reason. That without a manager checking over their employees’ shoulders, an employee will produce the minimal threshold of work to fulfill the requirements. This creates an overhead of chasing up your employees which does not exist if I can see their computer screen from my desk. And time spent in the office is more than just work, but about building a team culture which produces a positive feedback loop on the output of the business.</p>
<p>You can see the clash between a collectivistic and individualistic attitude here. A collectivist attitude cares firstly about the business, and can even translate that into terms the individualist attitude can understand. “We are all in the same boat, sink or swim”. The issue Tim Ferriss is addressing is the individualist employee who has a complete view of this interaction and yet still wants to go kite surfing, the business be damned. Now where the reader stands on that will be reflected on their opinion of time theft.</p>
<h2 id="Hire-an-Indian"><a href="#Hire-an-Indian" class="headerlink" title="Hire an Indian"></a>Hire an Indian</h2><p>One of Tim’s main arguments is to automate huge chunks of your life. What about tasks that require a minimum level of human decision making? Hire an Indian. You can get a personal assistant, that understands English and how to use a computer for $4.50 per hour. For example, farming the contact details for a list of people who match certain criteria.</p>
<p>It reminds me of this craze in Silicon Valley where rich people pay young healthy people for blood transfusions because it will extend their lifespan. Which is a great example of the human fear of the inevitability of death. I remember learning about this when Hulk Hogan’s court case was a big deal because apparently Peter Thiel does this? Anyway, to the point. So if this blood is aging you, does the young healthy donor age faster? Then are you basically buying years from someone else’s life? For a book about not wasting your precious hours, how do you, the reader, feel about this?</p>
<p>Imagine you are in a pointless meeting, and you offer to pay your boss $50 to let you leave. Now imagine you skip the meeting, and pay an Indian to summarize the minutes of that meeting for $50. Ponder the differences. The business is the source of the inefficiency and you are taking advantage of how poor this third party is, to buy back the time the business is wasting.</p>
<p> And I totally get why. Trying to solve the underlying issue is going to be impossible. You’d be trying to change the work culture in your whole industry. You can do this to an extent, carve out a small pocket of sanity. This is what he does when he enforces a policy of doing business through emails. But that only goes so far, so you hire a personal assistant. And that makes total sense. But, man, just to start, its depressing as hell.</p>
<h2 id="The-book-is-part-of-the-argument"><a href="#The-book-is-part-of-the-argument" class="headerlink" title="The book is part of the argument"></a>The book is part of the argument</h2><p>In the book, Tim writes that one of the easiest ways to a four hour work week is to create a niche product that you can sell online, preferably digital. Then after you have built up the necessary platform and ad base, you can move to automating the process. Then you sit back, put your feet up, and enjoy profits roll in. For example, write a book.</p>
<p>In order for your book to sell, you need to become an “expert” on a topic. That comes from having validation from a respectable source, such as a certification body. Ok, so this is where the problem comes in. Is Tim Ferriss a respectable source for entrepreneurship advice? Yes. Because he started a successful supplement product line. He was validated by the free market.</p>
<p>So is the book, just another source of passive income for Tim? Could it be, that he got lucky, then realizing that he could claim it was part of a proven process, he could create a positive feedback loop. He writes a book, that at the most basic level is just saying “create sources of passive income”, of which the book is a passive source of income for him. He’s not lying, but what he is selling isn’t what you think it is.</p>
<p>Because you buy the book, assuming it is an instruction manual that you can use to duplicate his success. Which it could be. But you don’t know that, because it could equally be in the author’s interest to lie to you and sell you a book full of dreams. He wants people to think its possible, because then his passive income works and then it becomes possible. But only for him.</p>
<h2 id="Conclusion"><a href="#Conclusion" class="headerlink" title="Conclusion"></a>Conclusion</h2><p>I had more thoughts, but this was about the amount that I wanted to write. I definitely gleaned some good advice, and I think I will keep my eyes open for niche markets in the next few years at university. But I also can see why he gets called a douchebag. Consider the following from the book.</p>
<blockquote>
<p>“Learn to be difficult when it counts. In school as in life, having a reputation for being assertive will help you receive preferential treatment without having to beg or fight for it every time.”</p>
<p>― <strong>Timothy Ferriss, The 4-Hour Workweek</strong></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> Book Review </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Regex Crossword Intermediate Solutions]]></title>
      <url>/2017/06/19/Regex-Crossword-Intermediate-Solutions/</url>
      <content type="html"><![CDATA[<p><a href="https://www.regexcrossword.com" target="_blank" rel="external">Play Regex Crossword here</a></p>
<a id="more"></a>
<h2 id="Always-remember"><a href="#Always-remember" class="headerlink" title="Always remember"></a>Always remember</h2><p>A towel<br><img src="/images/regex/int1.JPG" alt=""></p>
<h2 id="Johnny"><a href="#Johnny" class="headerlink" title="Johnny"></a>Johnny</h2><p>Walker<br><img src="/images/regex/int2.JPG" alt=""></p>
<h2 id="Earth"><a href="#Earth" class="headerlink" title="Earth"></a>Earth</h2><p>Forty-two<br><img src="/images/regex/int3.JPG" alt=""></p>
<h2 id="Encyclopedia"><a href="#Encyclopedia" class="headerlink" title="Encyclopedia"></a>Encyclopedia</h2><p>Dont panic<br><img src="/images/regex/int4.JPG" alt=""></p>
<h2 id="Technology"><a href="#Technology" class="headerlink" title="Technology"></a>Technology</h2><p>Turn off and on<br><img src="/images/regex/int5.JPG" alt=""></p>
]]></content>
      
        <categories>
            
            <category> Regex Crossword </category>
            
        </categories>
        
        
    </entry>
    
  
  
</search>
